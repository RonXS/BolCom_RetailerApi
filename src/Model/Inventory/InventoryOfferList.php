<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Inventory;

final class InventoryOfferList
{
    private $inventory;

    /**
     * @param \BolCom\RetailerApi\Model\Inventory\InventoryOffer[]|null $inventory
     */
    public function __construct(InventoryOffer ...$inventory)
    {
        $this->inventory = $inventory;
    }

    /**
     * @return \BolCom\RetailerApi\Model\Inventory\InventoryOffer[]
     */
    public function inventory(): array
    {
        return $this->inventory;
    }

    /**
     * @param \BolCom\RetailerApi\Model\Inventory\InventoryOffer[]|null $inventory
     * @return \BolCom\RetailerApi\Model\Inventory\InventoryOfferList
     */
    public function withInventory(array $inventory): InventoryOfferList
    {
        return new self(...$inventory);
    }

    public function toArray(): array
    {
        $inventory = [];

        foreach ($this->inventory as $__value) {
            $inventory[] = $__value->toArray();
        }

        return [
            'inventory' => $inventory,
        ];
    }

    public static function fromArray(array $data): InventoryOfferList
    {
        if (! isset($data['inventory']) || ! \is_array($data['inventory'])) {
            throw new \InvalidArgumentException("Key 'inventory' is missing in data array or is not an array");
        }

        $inventory = [];

        foreach ($data['inventory'] as $__value) {
            if (! \is_array($data['inventory'])) {
                throw new \InvalidArgumentException("Key 'inventory' in data array or is not an array of arrays");
            }

            $inventory[] = InventoryOffer::fromArray($__value);
        }

        return new self(...$inventory);
    }
}
