<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Rma;

final class ReturnProcessingResult
{
    private $quantity;
    private $processingResults;
    private $handlingResult;
    private $processingDateTime;

    public function __construct(int $quantity = null, ProcessingResult $processingResults = null, HandlingResult $handlingResult = null, \BolCom\RetailerApi\Model\DateTime $processingDateTime = null)
    {
        $this->quantity = $quantity;
        $this->processingResults = $processingResults;
        $this->handlingResult = $handlingResult;
        $this->processingDateTime = $processingDateTime;
    }

    public function quantity()
    {
        return $this->quantity;
    }

    public function processingResults()
    {
        return $this->processingResults;
    }

    public function handlingResult()
    {
        return $this->handlingResult;
    }

    public function processingDateTime()
    {
        return $this->processingDateTime;
    }

    public function withQuantity(int $quantity = null): ReturnProcessingResult
    {
        return new self($quantity, $this->processingResults, $this->handlingResult, $this->processingDateTime);
    }

    public function withProcessingResults(ProcessingResult $processingResults = null): ReturnProcessingResult
    {
        return new self($this->quantity, $processingResults, $this->handlingResult, $this->processingDateTime);
    }

    public function withHandlingResult(HandlingResult $handlingResult = null): ReturnProcessingResult
    {
        return new self($this->quantity, $this->processingResults, $handlingResult, $this->processingDateTime);
    }

    public function withProcessingDateTime(\BolCom\RetailerApi\Model\DateTime $processingDateTime = null): ReturnProcessingResult
    {
        return new self($this->quantity, $this->processingResults, $this->handlingResult, $processingDateTime);
    }

    public static function fromArray(array $data): ReturnProcessingResult
    {
        if (isset($data['quantity'])) {
            if (! \is_int($data['quantity'])) {
                throw new \InvalidArgumentException("Value for 'quantity' is not a int in data array");
            }

            $quantity = $data['quantity'];
        } else {
            $quantity = null;
        }

        if (isset($data['processingResults'])) {
            if (! \is_string($data['processingResults'])) {
                throw new \InvalidArgumentException("Value for 'processingResults' is not a string in data array");
            }

            $processingResults = ProcessingResult::fromValue($data['processingResults']);
        } else {
            $processingResults = null;
        }

        if (isset($data['handlingResult'])) {
            if (! \is_string($data['handlingResult'])) {
                throw new \InvalidArgumentException("Value for 'handlingResult' is not a string in data array");
            }

            $handlingResult = HandlingResult::fromValue($data['handlingResult']);
        } else {
            $handlingResult = null;
        }

        if (isset($data['processingDateTime'])) {
            if (! \is_string($data['processingDateTime'])) {
                throw new \InvalidArgumentException("Value for 'processingDateTime' is not a string in data array");
            }

            $processingDateTime = \BolCom\RetailerApi\Model\DateTime::fromString($data['processingDateTime']);
        } else {
            $processingDateTime = null;
        }

        return new self(
            $quantity,
            $processingResults,
            $handlingResult,
            $processingDateTime
        );
    }
}
