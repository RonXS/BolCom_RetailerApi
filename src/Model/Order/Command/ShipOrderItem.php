<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Order\Command;

final class ShipOrderItem extends \Prooph\Common\Messaging\Query
{
    use \Prooph\Common\Messaging\PayloadTrait;

    const MESSAGE_NAME = 'BolCom\RetailerApi\Model\Order\Command\ShipOrderItem';

    protected $messageName = self::MESSAGE_NAME;

    public function orderItemId(): \BolCom\RetailerApi\Model\Order\OrderItemId
    {
        return \BolCom\RetailerApi\Model\Order\OrderItemId::fromString($this->payload['orderItemId']);
    }

    public function shipmentReference()
    {
        return $this->payload['shipmentReference'] ?? null;
    }

    public function transport()
    {
        return isset($this->payload['transport']) ? \BolCom\RetailerApi\Model\Transport\TransportInstruction::fromArray($this->payload['transport']) : null;
    }

    public static function with(\BolCom\RetailerApi\Model\Order\OrderItemId $orderItemId, string $shipmentReference = null, \BolCom\RetailerApi\Model\Transport\TransportInstruction $transport = null): ShipOrderItem
    {
        return new self([
            'orderItemId' => $orderItemId->toString(),
            'shipmentReference' => $shipmentReference,
            'transport' => null === $transport ? null : $transport->toArray(),
        ]);
    }

    protected function setPayload(array $payload)
    {
        if (! isset($payload['orderItemId']) || ! \is_string($payload['orderItemId'])) {
            throw new \InvalidArgumentException("Key 'orderItemId' is missing in payload or is not a string");
        }

        if (isset($payload['shipmentReference']) && ! \is_string($payload['shipmentReference'])) {
            throw new \InvalidArgumentException("Value for 'shipmentReference' is not a string in payload");
        }

        if (isset($payload['transport']) && ! \is_array($payload['transport'])) {
            throw new \InvalidArgumentException("Value for 'transport' is not an array in payload");
        }

        $this->payload = $payload;
    }
}
