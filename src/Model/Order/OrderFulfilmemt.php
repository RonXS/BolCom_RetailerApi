<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Order;

final class OrderFulfilmemt
{
    private $method;
    private $distributionParty;
    private $latestDeliveryDate;
    private $exactDeliveryDate;
    private $expiryDate;

    public function __construct(\BolCom\RetailerApi\Model\Offer\FulfilmentMethod $method, DistributionParty $distributionParty, \BolCom\RetailerApi\Model\Date $latestDeliveryDate = null, \BolCom\RetailerApi\Model\Date $exactDeliveryDate = null, \BolCom\RetailerApi\Model\Date $expiryDate = null)
    {
        $this->method = $method;
        $this->distributionParty = $distributionParty;
        $this->latestDeliveryDate = $latestDeliveryDate;
        $this->exactDeliveryDate = $exactDeliveryDate;
        $this->expiryDate = $expiryDate;
    }

    public function method(): \BolCom\RetailerApi\Model\Offer\FulfilmentMethod
    {
        return $this->method;
    }

    public function distributionParty(): DistributionParty
    {
        return $this->distributionParty;
    }

    public function latestDeliveryDate()
    {
        return $this->latestDeliveryDate;
    }

    public function exactDeliveryDate()
    {
        return $this->exactDeliveryDate;
    }

    public function expiryDate()
    {
        return $this->expiryDate;
    }

    public function withMethod(\BolCom\RetailerApi\Model\Offer\FulfilmentMethod $method): OrderFulfilmemt
    {
        return new self($method, $this->distributionParty, $this->latestDeliveryDate, $this->exactDeliveryDate, $this->expiryDate);
    }

    public function withDistributionParty(DistributionParty $distributionParty): OrderFulfilmemt
    {
        return new self($this->method, $distributionParty, $this->latestDeliveryDate, $this->exactDeliveryDate, $this->expiryDate);
    }

    public function withLatestDeliveryDate(\BolCom\RetailerApi\Model\Date $latestDeliveryDate = null): OrderFulfilmemt
    {
        return new self($this->method, $this->distributionParty, $latestDeliveryDate, $this->exactDeliveryDate, $this->expiryDate);
    }

    public function withExactDeliveryDate(\BolCom\RetailerApi\Model\Date $exactDeliveryDate = null): OrderFulfilmemt
    {
        return new self($this->method, $this->distributionParty, $this->latestDeliveryDate, $exactDeliveryDate, $this->expiryDate);
    }

    public function withExpiryDate(\BolCom\RetailerApi\Model\Date $expiryDate = null): OrderFulfilmemt
    {
        return new self($this->method, $this->distributionParty, $this->latestDeliveryDate, $this->exactDeliveryDate, $expiryDate);
    }

    public static function fromArray(array $data): OrderFulfilmemt
    {
        if (! isset($data['method']) || ! \is_string($data['method'])) {
            throw new \InvalidArgumentException("Key 'method' is missing in data array or is not a string");
        }

        $method = \BolCom\RetailerApi\Model\Offer\FulfilmentMethod::fromValue($data['method']);

        if (! isset($data['distributionParty']) || ! \is_string($data['distributionParty'])) {
            throw new \InvalidArgumentException("Key 'distributionParty' is missing in data array or is not a string");
        }

        $distributionParty = DistributionParty::fromValue($data['distributionParty']);

        if (isset($data['latestDeliveryDate'])) {
            if (! \is_string($data['latestDeliveryDate'])) {
                throw new \InvalidArgumentException("Value for 'latestDeliveryDate' is not a string in data array");
            }

            $latestDeliveryDate = \BolCom\RetailerApi\Model\Date::fromString($data['latestDeliveryDate']);
        } else {
            $latestDeliveryDate = null;
        }

        if (isset($data['exactDeliveryDate'])) {
            if (! \is_string($data['exactDeliveryDate'])) {
                throw new \InvalidArgumentException("Value for 'exactDeliveryDate' is not a string in data array");
            }

            $exactDeliveryDate = \BolCom\RetailerApi\Model\Date::fromString($data['exactDeliveryDate']);
        } else {
            $exactDeliveryDate = null;
        }

        if (isset($data['expiryDate'])) {
            if (! \is_string($data['expiryDate'])) {
                throw new \InvalidArgumentException("Value for 'expiryDate' is not a string in data array");
            }

            $expiryDate = \BolCom\RetailerApi\Model\Date::fromString($data['expiryDate']);
        } else {
            $expiryDate = null;
        }

        return new self(
            $method,
            $distributionParty,
            $latestDeliveryDate,
            $exactDeliveryDate,
            $expiryDate
        );
    }
}
