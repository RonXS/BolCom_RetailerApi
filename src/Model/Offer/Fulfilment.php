<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Offer;

final class Fulfilment
{
    private $method;
    private $deliveryCode;

    public function __construct(FulfilmentMethod $method, DeliveryCode $deliveryCode = null)
    {
        $this->method = $method;
        $this->deliveryCode = $deliveryCode;
    }

    public function method(): FulfilmentMethod
    {
        return $this->method;
    }

    public function deliveryCode()
    {
        return $this->deliveryCode;
    }

    public function withMethod(FulfilmentMethod $method): Fulfilment
    {
        return new self($method, $this->deliveryCode);
    }

    public function withDeliveryCode(DeliveryCode $deliveryCode = null): Fulfilment
    {
        return new self($this->method, $deliveryCode);
    }

    public static function fromArray(array $data): Fulfilment
    {
        if (! isset($data['method']) || ! \is_string($data['method'])) {
            throw new \InvalidArgumentException("Key 'method' is missing in data array or is not a string");
        }

        $method = FulfilmentMethod::fromValue($data['method']);

        if (isset($data['deliveryCode'])) {
            if (! \is_string($data['deliveryCode'])) {
                throw new \InvalidArgumentException("Value for 'deliveryCode' is not a string in data array");
            }

            $deliveryCode = DeliveryCode::fromValue($data['deliveryCode']);
        } else {
            $deliveryCode = null;
        }

        return new self($method, $deliveryCode);
    }

    public function toArray(): array
    {
        return [
            'method' => $this->method->value(),
            'deliveryCode' => null === $this->deliveryCode ? null : $this->deliveryCode->value(),
        ];
    }
}
