<?php

// phpcs:ignoreFile
// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

namespace BolCom\RetailerApi\Model\Shipment;

final class ShipmentItemListItem
{
    private $orderItemId;
    private $ean;

    public function __construct(\BolCom\RetailerApi\Model\Order\OrderItemId $orderItemId, \BolCom\RetailerApi\Model\Offer\Ean $ean)
    {
        $this->orderItemId = $orderItemId;
        $this->ean = $ean;
    }

    public function orderItemId(): \BolCom\RetailerApi\Model\Order\OrderItemId
    {
        return $this->orderItemId;
    }

    public function ean(): \BolCom\RetailerApi\Model\Offer\Ean
    {
        return $this->ean;
    }

    public function withOrderItemId(\BolCom\RetailerApi\Model\Order\OrderItemId $orderItemId): ShipmentItemListItem
    {
        return new self($orderItemId, $this->ean);
    }

    public function withEan(\BolCom\RetailerApi\Model\Offer\Ean $ean): ShipmentItemListItem
    {
        return new self($this->orderItemId, $ean);
    }

    public static function fromArray(array $data): ShipmentItemListItem
    {
        if (! isset($data['orderItemId']) || ! \is_string($data['orderItemId'])) {
            throw new \InvalidArgumentException("Key 'orderItemId' is missing in data array or is not a string");
        }

        $orderItemId = \BolCom\RetailerApi\Model\Order\OrderItemId::fromString($data['orderItemId']);

        if (! isset($data['ean']) || ! \is_string($data['ean'])) {
            throw new \InvalidArgumentException("Key 'ean' is missing in data array or is not a string");
        }

        $ean = \BolCom\RetailerApi\Model\Offer\Ean::fromString($data['ean']);

        return new self($orderItemId, $ean);
    }
}
